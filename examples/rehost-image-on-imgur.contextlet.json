{"code":"// You must set this to your client ID, which you can obtain via https://api.imgur.com/oauth2/addclient\n\nvar imgurClientId = 'YOUR CLIENT ID HERE';\n\n// Get the img element that was clicked.\n\nvar img = browser.menus.getTargetElement(this.info.targetElementId);\nvar context = this;\n\n// This function creates an AJAX request, but doesn't send it yet.\n\nvar createRequest = function (errorHandler)\n{\n    var request = new XMLHttpRequest();\n    request.open('POST', 'https://api.imgur.com/3/image');\n    request.setRequestHeader('Authorization', 'Client-ID ' + imgurClientId);\n    \n    request.addEventListener('readystatechange', function ()\n    {\n        if (request.readyState === 4)\n        {\n            // We've received the response.\n            \n            if (request.status !== 200)\n            {\n                errorHandler('Failed to upload to imgur.');\n                return;\n            }\n            \n            try\n            {\n                var result = JSON.parse(request.responseText);\n                \n                if (result.data == undefined || result.data.link == undefined)\n                {\n                    throw new Error();\n                }\n            }\n            catch (error)\n            {\n                errorHandler('Received a bad response from imgur.');\n                return;\n            }\n            \n            // Success! Send the user to the image URL.\n            \n            if (context.info.modifiers.indexOf('Ctrl') == -1)\n            {\n                // Open in the same tab.\n                \n                document.location = result.data.link;\n            }\n            else\n            {\n                // Open in a new tab.\n                \n                // window.open() is subject to the site's popup blocker settings, so we'll use a background script instead.\n                \n                context.runAs('background', function ()\n                {\n                    browser.tabs.create({url: this.params.url, active: true});\n                }, {url: result.data.link});\n            }\n        }\n    });\n    \n    return request;\n};\n\n// Create the AJAX request to upload the image by its URL.\n\nvar request = createRequest(function ()\n{\n    // This function is called if the response contained an error. It's\n    // possible that imgur can't access the image URL (for example, if\n    // it's restricted by login). We'll try uploading the image data\n    // instead. The image will be reencoded, which means JPEGs will\n    // experience some loss of quality.\n    \n    var onReady = function ()\n    {\n        // Draw the image to a canvas so we can get its image data.\n        \n        var canvas = document.createElement('canvas');\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n        canvas.getContext('2d').drawImage(img, 0, 0);\n        var base64Data = canvas.toDataURL('image/png').replace(/^data:[^,]+,/, '');\n        \n        // Create the AJAX request to upload the image data.\n        \n        var request = createRequest(function (message)\n        {\n            // We encountered an error again. Give up.\n            \n            console.log(message + ' The XMLHttpRequest object is below.');\n            console.log(request);\n            window.alert(message);\n        });\n        \n        // Send the request (uploading the image data).\n        \n        var formData = new FormData();\n        formData.append('type', 'base64');\n        formData.append('image', base64Data);\n        request.send(formData);\n    };\n    \n    // Make sure the image is fully loaded in the browser.\n    \n    if (img.complete)\n    {\n        onReady();\n    }\n    else\n    {\n        img.addEventListener('load', function ()\n        {\n            onReady();\n        });\n    }\n});\n\n// Get an absolute URL from the image src.\n\nvar a = document.createElement('a');\na.href = img.src;\nvar url = a.href;\n\n// Send the request (uploading the image URL).\n\nvar formData = new FormData();\nformData.append('type', 'URL');\nformData.append('image', url);\nrequest.send(formData);\n","contexts":["image"],"icons":null,"patterns":"","scope":"content","title":"Rehost Image on Imgur","type":"normal"}